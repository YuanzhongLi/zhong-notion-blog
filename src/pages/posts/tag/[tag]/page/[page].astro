---
import type { SelectProperty, StaticTagParams } from '../../../../../lib/interfaces';
import {
  getPostsByTagAndPage,
  getRankedPosts,
  getAllTags,
  getNumberOfPagesByTag,
} from '../../../../../lib/notion/client';
import Layout from '../../../../../layouts/Layout.astro';
import TagCover from '../../../../../components/Cover/TagCover.astro';
import BlogSections from '../../../../../components/BlogSections/BlogSections.astro';
import Pagination from '../../../../../components/Pagination.astro';

export async function getStaticPaths() {
  const allTags = await getAllTags();

  const params: StaticTagParams[] = [];

  await Promise.all(
    allTags
      .map((tag: SelectProperty) => getNumberOfPagesByTag(tag.name)
        .then((numberOfPages: number) => {
          for (let i = 2; i <= numberOfPages; i += 1) {
            params.push({ params: { tag: tag.name, page: i.toString() } });
          }
        })),
  );

  return params;
}

const { tag, page } = Astro.params;

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTagAndPage(tag, parseInt(page, 10)),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
]);

const currentTag = posts[0].Tags.find((t) => t.name === tag);
---

<Layout
  title={`Posts in ${tag} ${page}/${numberOfPages}`}
  description=''
  path={`/posts/tag/${tag}/page/${page}`}
  ogImage=''
>
  <div slot="main" class="md:w-[80vw] lg:w-[70vw] flex flex-col mx-auto size-full">
    <TagCover tag={currentTag} />
    <BlogSections posts={posts} />

    <Pagination
      currentPage={parseInt(page, 10)}
      numberOfPages={numberOfPages}
      tag={tag}
    />
  </div>
</Layout>
